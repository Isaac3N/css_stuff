{"ast":null,"code":"var _jsxFileName = \"/Users/isaac/Documents/dev/css_stuff/vibe-studio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport { dark } from \"./styles/Themes\";\nimport { LocomotiveScrollProvider } from \"react-locomotive-scroll\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const containerRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: dark,\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"App\",\n        ref: containerRef,\n        children: \"App file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(LocomotiveScrollProvider, {\n        options: {\n          smooth: true // ... all available Locomotive Scroll instance options\n\n        },\n        watch: [//..all the dependencies you want to watch to update the scroll.\n          //  Basicaly, you would want to watch page/location changes\n          //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\n        ],\n        containerRef: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          \"data-scroll-container\": true,\n          ref: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"5okL0DAk6Atnb3+Rru+wGBWyP+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/isaac/Documents/dev/css_stuff/vibe-studio/src/App.js"],"names":["ThemeProvider","GlobalStyles","dark","LocomotiveScrollProvider","useRef","App","containerRef","smooth"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,wBAAT,QAAyC,yBAAzC;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,YAAY,GAAGF,MAAM,CAAC,IAAD,CAA3B;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEF,IAAtB;AAAA,8BACC;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAsB,QAAA,GAAG,EAAEI,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,wBAAD;AACC,QAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE,IADA,CAER;;AAFQ,SADV;AAKC,QAAA,KAAK,EACJ,CACC;AACA;AACA;AAHD,SANF;AAYC,QAAA,YAAY,EAAED,YAZf;AAAA,+BAcC;AAAM,uCAAN;AAA4B,UAAA,GAAG,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA;AAdD;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA;;GA/BQD,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport { dark } from \"./styles/Themes\";\nimport { LocomotiveScrollProvider } from \"react-locomotive-scroll\";\nimport { useRef } from \"react\";\n\nfunction App() {\n\tconst containerRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GlobalStyles />\n\t\t\t<ThemeProvider theme={dark}>\n\t\t\t\t<main className=\"App\" ref={containerRef}>\n\t\t\t\t\tApp file\n\t\t\t\t</main>\n\t\t\t\t<LocomotiveScrollProvider\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tsmooth: true,\n\t\t\t\t\t\t// ... all available Locomotive Scroll instance options\n\t\t\t\t\t}}\n\t\t\t\t\twatch={\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t//..all the dependencies you want to watch to update the scroll.\n\t\t\t\t\t\t\t//  Basicaly, you would want to watch page/location changes\n\t\t\t\t\t\t\t//  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t\tcontainerRef={containerRef}\n\t\t\t\t>\n\t\t\t\t\t<main data-scroll-container ref={containerRef}>\n\t\t\t\t\t\t{/* ...your app */}\n\t\t\t\t\t</main>\n\t\t\t\t</LocomotiveScrollProvider>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}